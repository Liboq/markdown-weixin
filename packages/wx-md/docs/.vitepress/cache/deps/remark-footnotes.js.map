{
  "version": 3,
  "sources": ["../../../../node_modules/micromark/dist/util/normalize-identifier.js", "../../../../node_modules/micromark/dist/character/markdown-line-ending.js", "../../../../node_modules/micromark/dist/character/markdown-space.js", "../../../../node_modules/micromark/dist/tokenize/factory-space.js", "../../../../node_modules/micromark/dist/tokenize/partial-blank-line.js", "../../../../node_modules/micromark/dist/constant/splice.js", "../../../../node_modules/micromark/dist/util/chunked-splice.js", "../../../../node_modules/micromark/dist/util/size-chunks.js", "../../../../node_modules/micromark/dist/util/prefix-size.js", "../../../../node_modules/micromark/dist/constant/assign.js", "../../../../node_modules/micromark/dist/util/shallow.js", "../../../../node_modules/micromark/dist/util/resolve-all.js", "../../../../node_modules/micromark-extension-footnote/index.js", "../../../../node_modules/mdast-util-footnote/from-markdown.js", "../../../../node_modules/parse-entities/decode-entity.browser.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/association.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js", "../../../../node_modules/repeat-string/index.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../../../../node_modules/mdast-util-to-markdown/lib/util/safe.js", "../../../../node_modules/mdast-util-footnote/to-markdown.js", "../../../../node_modules/remark-footnotes/index.js"],
  "sourcesContent": ["'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n", "'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n", "'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n", "'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n", "'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n", "'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n", "'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n", "'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n", "'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n", "'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n", "'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n", "'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n", "module.exports = footnote\n\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar blank = require('micromark/dist/tokenize/partial-blank-line')\nvar createSpace = require('micromark/dist/tokenize/factory-space')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar prefixSize = require('micromark/dist/util/prefix-size')\nvar shallow = require('micromark/dist/util/shallow')\nvar resolveAll = require('micromark/dist/util/resolve-all')\n\nvar indent = {tokenize: tokenizeIndent, partial: true}\n\nfunction footnote(options) {\n  var settings = options || {}\n  var call = {tokenize: tokenizeFootnoteCall}\n  var noteStart = {tokenize: tokenizeNoteStart, resolveAll: resolveAllNote}\n  var noteEnd = {\n    add: 'after',\n    tokenize: tokenizeNoteEnd,\n    resolveAll: resolveAllNote,\n    resolveTo: resolveToNoteEnd\n  }\n  var definition = {\n    tokenize: tokenizeDefinitionStart,\n    continuation: {tokenize: tokenizeDefinitionContinuation},\n    exit: footnoteDefinitionEnd\n  }\n  var text = {91: call}\n\n  if (settings.inlineNotes) {\n    text[93] = noteEnd\n    text[94] = noteStart\n  }\n\n  return {\n    _hiddenFootnoteSupport: {},\n    document: {91: definition},\n    text: text\n  }\n}\n\n// Remove remaining note starts.\nfunction resolveAllNote(events) {\n  var length = events.length\n  var index = -1\n  var token\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (events[index][0] === 'enter' && token.type === 'inlineNoteStart') {\n      token.type = 'data'\n      // Remove the two marker (`^[`).\n      events.splice(index + 1, 4)\n      length -= 4\n    }\n  }\n\n  return events\n}\n\nfunction resolveToNoteEnd(events, context) {\n  var index = events.length - 4\n  var group\n  var text\n  var token\n  var type\n  var openIndex\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    // Find where the note starts.\n    if (events[index][0] === 'enter' && token.type === 'inlineNoteStart') {\n      openIndex = index\n      type = 'inlineNote'\n      break\n    }\n  }\n\n  group = {\n    type: type,\n    start: shallow(events[openIndex][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n\n  text = {\n    type: 'inlineNoteText',\n    start: shallow(events[openIndex + 4][1].end),\n    end: shallow(events[events.length - 3][1].start)\n  }\n\n  var note = [\n    ['enter', group, context],\n    events[openIndex + 1],\n    events[openIndex + 2],\n    events[openIndex + 3],\n    events[openIndex + 4],\n    ['enter', text, context]\n  ]\n\n  chunkedSplice(\n    note,\n    note.length,\n    0,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(openIndex + 6, -4),\n      context\n    )\n  )\n\n  note.push(\n    ['exit', text, context],\n    events[events.length - 2],\n    events[events.length - 3],\n    ['exit', group, context]\n  )\n\n  chunkedSplice(events, index, events.length - index, note)\n\n  return events\n}\n\nfunction tokenizeFootnoteCall(effects, ok, nok) {\n  var self = this\n  var defined = self.parser.footnotes || (self.parser.footnotes = [])\n  var size = 0\n  var data\n\n  return start\n\n  function start(code) {\n    // istanbul ignore next - Hooks.\n    if (code !== 91) return nok(code)\n\n    effects.enter('footnoteCall')\n    effects.enter('footnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallLabelMarker')\n    return callStart\n  }\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n\n    effects.enter('footnoteCallMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallMarker')\n    effects.enter('footnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  function callData(code) {\n    var token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('footnoteCallString')\n      return defined.indexOf(normalizeIdentifier(self.sliceSerialize(token))) <\n        0\n        ? nok(code)\n        : end(code)\n    }\n\n    effects.consume(code)\n\n    if (!(code < 0 || code === 32)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n\n  function end(code) {\n    // Always a `]`.\n    effects.enter('footnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteCallLabelMarker')\n    effects.exit('footnoteCall')\n    return ok\n  }\n}\n\nfunction tokenizeNoteStart(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // istanbul ignore next - Hooks.\n    if (code !== 94) return nok(code)\n\n    effects.enter('inlineNoteStart')\n    effects.enter('inlineNoteMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteMarker')\n    return noteStart\n  }\n\n  function noteStart(code) {\n    if (code !== 91) return nok(code)\n\n    effects.enter('inlineNoteStartMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteStartMarker')\n    effects.exit('inlineNoteStart')\n    return ok\n  }\n}\n\nfunction tokenizeNoteEnd(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    var index = self.events.length\n    var hasStart\n\n    // Find an opening.\n    while (index--) {\n      if (self.events[index][1].type === 'inlineNoteStart') {\n        hasStart = true\n        break\n      }\n    }\n\n    // istanbul ignore next - Hooks.\n    if (code !== 93 || !hasStart) {\n      return nok(code)\n    }\n\n    effects.enter('inlineNoteEnd')\n    effects.enter('inlineNoteEndMarker')\n    effects.consume(code)\n    effects.exit('inlineNoteEndMarker')\n    effects.exit('inlineNoteEnd')\n    return ok\n  }\n}\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  var self = this\n  var defined = self.parser.footnotes || (self.parser.footnotes = [])\n  var identifier\n  var size = 0\n  var data\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - hooks. */\n    if (code !== 91) {\n      return nok(code)\n    }\n\n    effects.enter('footnoteDefinition')._container = true\n    effects.enter('footnoteDefinitionLabel')\n    effects.enter('footnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('footnoteDefinitionLabelMarker')\n    return labelStart\n  }\n\n  function labelStart(code) {\n    // `^`\n    if (code !== 94) return nok(code)\n\n    effects.enter('footnoteDefinitionMarker')\n    effects.consume(code)\n    effects.exit('footnoteDefinitionMarker')\n    effects.enter('footnoteDefinitionLabelString')\n    return atBreak\n  }\n\n  function atBreak(code) {\n    var token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('footnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('footnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('footnoteDefinitionLabelMarker')\n      effects.exit('footnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (code === -5 || code === -4 || code === -3) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === -5 ||\n      code === -4 ||\n      code === -3 ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!(code < 0 || code === 32)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n\n  function labelAfter(code) {\n    if (code !== 58) {\n      return nok(code)\n    }\n\n    effects.enter('definitionMarker')\n    effects.consume(code)\n    effects.exit('definitionMarker')\n    return effects.check(blank, onBlank, nonBlank)\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    return done(code)\n  }\n\n  function nonBlank(code) {\n    // A space or tab.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('footnoteDefinitionWhitespace')\n      effects.consume(code)\n      effects.exit('footnoteDefinitionWhitespace')\n      return done(code)\n    }\n\n    // No space is also fine, just like a block quote marker.\n    return done(code)\n  }\n\n  function done(code) {\n    if (defined.indexOf(identifier) < 0) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  var self = this\n\n  return effects.check(blank, onBlank, notBlank)\n\n  // Continued blank lines are fine.\n  function onBlank(code) {\n    if (self.containerState.initialBlankLine) {\n      self.containerState.furtherBlankLines = true\n    }\n\n    return ok(code)\n  }\n\n  // If there were continued blank lines, or this isn’t indented at all.\n  function notBlank(code) {\n    if (\n      self.containerState.furtherBlankLines ||\n      !(code === -2 || code === -1 || code === 32)\n    ) {\n      return nok(code)\n    }\n\n    self.containerState.initialBlankLine = undefined\n    self.containerState.furtherBlankLines = undefined\n    return effects.attempt(indent, ok, nok)(code)\n  }\n}\n\nfunction footnoteDefinitionEnd(effects) {\n  effects.exit('footnoteDefinition')\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n\n  return createSpace(effects, afterPrefix, 'footnoteDefinitionIndent', 5)\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'footnoteDefinitionIndent') === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "var normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\n\nexports.canContainEols = ['footnote']\n\nexports.enter = {\n  footnoteDefinition: enterFootnoteDefinition,\n  footnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n  footnoteCall: enterFootnoteCall,\n  footnoteCallString: enterFootnoteCallString,\n  inlineNote: enterNote\n}\nexports.exit = {\n  footnoteDefinition: exitFootnoteDefinition,\n  footnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n  footnoteCall: exitFootnoteCall,\n  footnoteCallString: exitFootnoteCallString,\n  inlineNote: exitNote\n}\n\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\nfunction exitFootnoteDefinitionLabelString(token) {\n  var label = this.resume()\n  this.stack[this.stack.length - 1].label = label\n  this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\nfunction exitFootnoteCallString(token) {\n  var label = this.resume()\n  this.stack[this.stack.length - 1].label = label\n  this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\nfunction enterNote(token) {\n  this.enter({type: 'footnote', children: []}, token)\n}\n\nfunction exitNote(token) {\n  this.exit(token)\n}\n", "'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n", "module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n", "module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n", "/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n", "module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n", "module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n", "module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n", "module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n", "module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n", "exports.unsafe = [\n  // This is on by default already.\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']}\n]\nexports.handlers = {\n  footnote: footnote,\n  footnoteDefinition: footnoteDefinition,\n  footnoteReference: footnoteReference\n}\n\nvar association = require('mdast-util-to-markdown/lib/util/association')\nvar phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar flow = require('mdast-util-to-markdown/lib/util/container-flow')\nvar indentLines = require('mdast-util-to-markdown/lib/util/indent-lines')\nvar safe = require('mdast-util-to-markdown/lib/util/safe')\n\nfootnoteReference.peek = footnoteReferencePeek\nfootnote.peek = footnotePeek\n\nfunction footnoteReference(node, _, context) {\n  var exit = context.enter('footnoteReference')\n  var subexit = context.enter('reference')\n  var reference = safe(context, association(node), {before: '^', after: ']'})\n  subexit()\n  exit()\n  return '[^' + reference + ']'\n}\n\nfunction footnoteReferencePeek() {\n  return '['\n}\n\nfunction footnote(node, _, context) {\n  var exit = context.enter('footnote')\n  var subexit = context.enter('label')\n  var value = '^[' + phrasing(node, context, {before: '[', after: ']'}) + ']'\n  subexit()\n  exit()\n  return value\n}\n\nfunction footnotePeek() {\n  return '^'\n}\n\nfunction footnoteDefinition(node, _, context) {\n  var exit = context.enter('footnoteDefinition')\n  var subexit = context.enter('label')\n  var label =\n    '[^' + safe(context, association(node), {before: '^', after: ']'}) + ']:'\n  var value\n  subexit()\n\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : '    ') + line\n    }\n\n    return (blank ? label : label + ' ') + line\n  }\n}\n", "'use strict'\n\nvar syntax = require('micromark-extension-footnote')\nvar fromMarkdown = require('mdast-util-footnote/from-markdown')\nvar toMarkdown = require('mdast-util-footnote/to-markdown')\nvar warningIssued\n\nmodule.exports = footnotes\n\nfunction footnotes(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-footnotes] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown)\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n"],
  "mappings": "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",
  "names": ["index", "value"]
}
